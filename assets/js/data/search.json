[ { "title": "Higher Studies Preparation Guide: IELTS and GRE", "url": "/posts/Higher-Studies-Preparation/", "categories": "miscellaneous", "tags": "miscellaneous", "date": "2023-06-10 14:39:00 +0600", "snippet": "IELTS ‡¶®‡¶ø‡ßü‡ßá ‡¶ò‡¶æ‡¶ü‡¶æ‡¶ò‡¶æ‡¶ü‡¶ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶ó‡ßá‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶∏‡¶¨‡¶ö‡ßá‡ßü‡ßá ‡¶¨‡ßá‡¶∂‡¶ø ‡¶Ø‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶Æ‡ßÅ‡¶ñ‡ßÄ‡¶® ‡¶π‡¶á, ‡¶§‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá materials ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶®‡¶ø‡ßü‡ßá‡•§ ‡¶Ø‡ßá‡¶π‡ßá‡¶§‡ßÅ IELTS ‡¶è‡¶∞ ‡¶∏‡¶ï‡¶≤ ‡¶ï‡¶ø‡¶õ‡ßÅ Cambridge Assessment English ‡¶ï‡¶∞‡ßç‡¶§‡ßÉ‡¶™‡¶ï‡ßç‡¶∑ ‡¶¶‡ßç‡¶¨‡¶æ‡¶∞‡¶æ ‡¶®‡¶ø‡ßü‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶ø‡¶§, ‡¶§‡¶æ‡¶á ...", "content": "IELTS ‡¶®‡¶ø‡ßü‡ßá ‡¶ò‡¶æ‡¶ü‡¶æ‡¶ò‡¶æ‡¶ü‡¶ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶ó‡ßá‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶∏‡¶¨‡¶ö‡ßá‡ßü‡ßá ‡¶¨‡ßá‡¶∂‡¶ø ‡¶Ø‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶Æ‡ßÅ‡¶ñ‡ßÄ‡¶® ‡¶π‡¶á, ‡¶§‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá materials ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶®‡¶ø‡ßü‡ßá‡•§ ‡¶Ø‡ßá‡¶π‡ßá‡¶§‡ßÅ IELTS ‡¶è‡¶∞ ‡¶∏‡¶ï‡¶≤ ‡¶ï‡¶ø‡¶õ‡ßÅ Cambridge Assessment English ‡¶ï‡¶∞‡ßç‡¶§‡ßÉ‡¶™‡¶ï‡ßç‡¶∑ ‡¶¶‡ßç‡¶¨‡¶æ‡¶∞‡¶æ ‡¶®‡¶ø‡ßü‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶ø‡¶§, ‡¶§‡¶æ‡¶á Cambridge ‡¶¨‡¶á ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶∏‡¶¨‡¶ö‡ßá‡ßü‡ßá ‡¶¨‡ßá‡¶∏‡ßç‡¶ü‡•§ ‡¶§‡¶æ‡¶á ‡¶ï‡ßç‡¶Ø‡¶æ‡¶Æ‡¶¨‡ßç‡¶∞‡¶ø‡¶ú ‡¶∏‡¶ø‡¶∞‡¶ø‡¶ú‡ßá‡¶∞ ‡¶¨‡¶á‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶™‡¶ø‡¶°‡¶ø‡¶è‡¶´ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¶‡¶ø‡ßü‡ßá ‡¶¶‡¶ø‡¶≤‡¶æ‡¶Æ‡•§‚òÖAll Cambridge Booksüìöüìö + AudioüîäüîäFree: Cambridge 16: link Cambridge 15: link Cambridge-14: link Cambridge-13: link Cambridge-12: link Cambridge-11: link Cambridge-10: link Cambridge-9: link Cambridge-8: link Cambridge-7: link Cambridge-6: link Cambridge-5: link Cambridge-4: link Cambridge-3: link Cambridge-2: link Cambridge-1: link‡¶è‡¶õ‡¶æ‡ßú‡¶æ ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ YouTube channel ‡¶è‡¶∞ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¶‡¶ø‡ßü‡ßá ‡¶¶‡¶ø‡¶ö‡ßç‡¶õ‡¶ø ‡¶Ø‡ßá‡¶ó‡ßÅ‡¶≤‡ßã ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ preparation ‡¶ï‡ßá ‡¶Ü‡¶∞‡¶ì ‡¶∏‡¶π‡¶ú ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶¨‡ßá‡•§ 10 mins school https://youtube.com/c/BanglayIELTS https://youtube.com/c/IELTSLiz789 https://youtube.com/c/E2IELTS https://youtube.com/c/AsadYaqubIELTS https://youtube.com/c/EnglishSpeakingSuccess https://youtube.com/c/Ieltsadvantage https://youtube.com/channel/UCRSFsZwTpcm2IZKcWTOyyZg‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶∏‡¶æ‡¶á‡¶ü‡ßá‡¶∞ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶®‡¶ø‡¶ö‡ßá ‡¶¶‡¶ø‡ßü‡ßá ‡¶¶‡¶ø‡¶ö‡ßç‡¶õ‡¶ø ‡¶Ø‡ßá‡¶ó‡ßÅ‡¶≤‡¶æ‡¶§‡ßá ‡¶Ö‡¶®‡ßá‡¶ï ‡¶ü‡¶ø‡¶™‡¶∏ ‡¶ì ‡¶ü‡ßç‡¶∞‡¶ø‡¶ï‡¶∏ ‡¶™‡¶æ‡¶¨‡ßá‡¶®, ‡¶Ø‡¶æ band score ‡¶¨‡¶æ‡ßú‡¶æ‡¶§‡ßá ‡¶∏‡¶π‡¶æ‡ßü‡¶§‡¶æ ‡¶ï‡¶∞‡¶¨‡ßá‡•§ http://ieltsliz.com/ https://ielts-simon.com/ https://www.ielts-mentor.com/‡¶®‡¶ø‡¶ö‡ßá ‡¶Ü‡¶∞ ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶Ü‡¶∞‡ßç‡¶ü‡¶ø‡¶ï‡ßá‡¶≤ ‡¶è‡¶∞ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¶‡¶ø‡¶ö‡ßç‡¶õ‡¶ø ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡¶•‡ßá‡¶ï‡ßá IELTS-‡¶è ‡¶Ö‡¶Ç‡¶∂‡¶ó‡ßç‡¶∞‡¶π‡¶£ ‡¶ï‡¶∞‡ßá ‡¶≠‡¶æ‡¶≤‡ßã ‡¶¨‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶° ‡¶∏‡ßç‡¶ï‡ßã‡¶∞ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶ï‡ßü‡ßá‡¶ï‡¶ú‡¶® ‡¶≠‡¶æ‡¶á ‡¶§‡¶æ‡¶∞‡¶æ ‡¶ï‡ßÄ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶Æ‡ßá‡¶®‡ßá ‡¶ö‡¶≤‡¶§ ‡¶¨‡¶æ ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶™‡ßú‡¶§, ‡¶§‡¶æ ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶¨‡¶∞‡ßç‡¶£‡¶®‡¶æ ‡¶ï‡¶∞‡¶æ ‡¶Ü‡¶õ‡ßá‡•§ https://hsa.grecbd.com/?s=ielts https://www.germanprobashe.com/archives/16629 (avijit bhattacharjee) https://www.germanprobashe.com/archives/15912 (Farjana Yesmin) https://www.germanprobashe.com/archives/15748 (Tariqul Dipu) ‡¶§‡¶æ‡¶õ‡¶æ‡ßú‡¶æ ‡¶Ö‡¶®‡¶æ‡¶≤‡¶æ‡¶á‡¶®‡ßá‡¶á IELTS mock test ‡¶¶‡ßá‡¶ì‡ßü‡¶æ‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡¶∞‡ßÄ ‡¶∏‡¶æ‡¶á‡¶ü‡ßá‡¶∞ ‡¶≤‡¶ø‡¶Ç‡¶ï- https://ieltsonlinetests.com/IELTS Reading Resources Reading Lecture 2.pdf Reading Lecture 3.pdf CRASH Reading Lecture 1.pdf CRASH Reading Lecture 2.pdf CRASH Reading Lecture 4.pdfIELTS Speaking Resources IELTS SPEAKING LECTURE 2 (2020).pdf IELTS SPEAKING LECTURE 1 (2020).pdf IELTS SPEAKING LECTURE 3 (2020).pdfIELTS Listening Resources audio files - https://drive.google.com/drive/folders/1pyOUQwlmUikmg9OpoARE89SBKwRvHoaI?usp=drive_link Crash Listening 4.pdf Crash Listening 3.pdf Crash Listening 2.pdf Crash Listening 1.pdfIELTS Writing Resources Regular Writing Lecture 4.pdf Crash Writing 2.pdf Crash Writing 1.pdf Regular Writing Lecture 5.pdf" }, { "title": "SAP 2", "url": "/posts/Sap-2/", "categories": "Academics, DSD", "tags": "academic courses, digital system design, sap2", "date": "2022-02-27 09:10:50 +0600", "snippet": "Jump along with instructions (LDA, ADD, SUB, OUT, HLT) of SAP-01 force computer to repeat or skip part of a program which opens up a new world for computer program.SAP - 01 &amp; SAP-02 architechtu...", "content": "Jump along with instructions (LDA, ADD, SUB, OUT, HLT) of SAP-01 force computer to repeat or skip part of a program which opens up a new world for computer program.SAP - 01 &amp; SAP-02 architechturedifference between sap-1 and sap-2 Difference SAP-01 SAP-02 Bus Width 8 bit 16 bit Use of Bidirectional Register No Yes Program Counter address length/ address length received by MAR 4 bit (unidirectional pc) 16 bit (bidirectional pc) Data Length 8 bit 8 bit Opcode length 4 bit 8 bit Input port Input is attached with MAR. pin 01 is used for hexadecimal input.pin 02 is used for binary input Output port output register is present. pin 03 is used for hexadecimal output.pin 04 is used for binary output. Display Binary Hexadecimal memory data register (MDR) NO Yes, holds the data temporarily Possible No of Instructions 2^4=16 2^8=256. though only 42 instructions are there in sap-2 memory size 16x8 bit = 16 Byte 64 KB (2 KB for ROM &lt;0000H-07FFH&gt;, 62 KB for RAM&lt;08FFH,FFFFH&gt;) Address and Data flow Address is passed through MAR to RAM. Address is passed through MAR and then into 64 KB memory. Data is given as input in the MDR. Flags ¬† works for sign flag and zero flag only LDA instruction 1 byte (0000 0001 - opcode and address) 3 byte (1 byte for opcode, 2 byte for address) Bidirectional RegistersIn SAP-1, instruction register needs 8 wires (seperate 4 wires for receiving 4 bit input data from bus, and seperate 4 wires for storing 4 bit output data into the bus)In SAP-2, bidirectional registers are used which require 4 wires for both 4 bit input and output data. The I/O pins are connected internally. As both input data and output data are received/stored with the same 4 wires, less wire is used than SAP-1. hence less capacitance is produced and the circuit is also less complex than sap-1.To reduce wiring capacitance of sap-02 we will run only one set of wires between each register and the bus. The input and output pins are shorted. Only one group of wires are connected to the bus.During a computer run, either LOAD or ENABLE is active, but not both at the same time.An active LOAD means a binary word flows from bus to register input. The output lines are floating.An active ENABLE means a binary word flows from register to the bus. The input lines are floating.The input output pins are connected shortly which reduces number of i/o pins and also the wiring capacitance. bidirectional means data can move either way.Memory Reference InstructionsMemory reference instruction(MRI) is one that uses the memory during the execution cycle. Memory reference instructions are relatively slow because they require more than one memory access during the instruction cycle. Furthermore, we often want to move data directly from one register to another not going through memory. MOV stands for move. It tells computer to move data from one register to another. Cycle States State Name ¬† T1 Address Fetch T2 Increment ¬† T3 Memory Hand AssembleHand assemble means to translate a source program to machine language program by hand rather than machine. Hand assemble the below programMVI A, 17HMVI B, 2DHADD BSTA 5600HINR AMOV C,AMVI A,00HMVI B,0CHMVI C, 08HREPEAT: ADD BDCR CJZ DONEJMP REPEATDONE: HLTChange the multiplication part into a subroutine located at starting address F006H.REPEAT: ADD BDCR CJNZ REPEATRETMVI A,00HMVI B,0CHMVI C, 08HCALL F006HHLT Instruction Program load the accumulator with the contents of memory location 2000H. LDA 2000H store the accumulator content at memory location 7FFFH. If A=8AH, after execution of STA 7FFFH, memory address 7FFFH will store 8AH. STA 7FFFH load the accumulator with 37H. MVI A, 37H (move immediate)MVI A, byteMVI B, byteMVI C, byte Show the mnemonics for a program that loads the accumulator with 49H, B register with 4AH, C register with 4BH, then store the accumulator content at location 6285H. MVI A, 49HMVI B, 4AHMVI C, 4BHSTA 6285HHLT ¬† A=34HB=05HAfter MOV A,BA=05HB=05H ADD stands for add the data in the designated registerto the contents of accumulator. ¬† Similarly, SUB means subtract the data in thedesignated register from the accumulator content. ¬† Show the mnemonic for adding decimal 23 and 45. the answer is to be stored at location 5600H. Also increment the answer by 1 and store it in C register. MVI A, 17HMVI B, 2DHADD BSTA 5600HINR AMOV C,A Get the next instruction from memory location 3000H.JMP is the mnemonic for Jump.Every JMP instruction includes an address that is loaded into the program counter. It tells the computer to get the next instruction from the designated memory location. JMP 3000H During the execution of a instruction, if the accumulator contents become negative, it gets the next instruction from memory location 3000H if sign flag=1. JM is the mnemonic for jump if minus. The computer will jump to designated address if and only if sign flag (S) is set (1).S=0, if A ‚â• 0 1, if A &lt; 0 JM 3000H JZ is the mnemonic for jump if zero. JNZ stands for jump if not zero. During execution, if accumulator becomes zero, the zero flag will be set (Z=1). JM, JZ, JNZ are conditional jumps. JMP is unconditional. ¬† Show a program that multiple decimal 12 and 8. MVI A,00HMVI B,0CHMVI C, 08HREPEAT: ADD BDCR CJZ DONEJMP REPEATDONE: HLTMVI A,00HMVI B,0CHMVI C, 08HREPEAT: ADD BDCR CJNZ REPEATHLT ‚Äì Complement the accumulator‚Äì Inverts each bit of the accumulator CMA And the accumulator content with the designated register ANA B Or the accumulator content with the designated register ORA B Xor the accumulator content with the designated register XRA B And immediate. And the accumulator contents with the byte that immediately follows the opcode. ANI C7H ‚Äì Or immediate‚Äì Or the accumulator contents with the byte that immediately follows the opcode. ORI C7H ‚Äì Xor immediate‚Äì Xor the accumulator contents with the byte that immediately follows the opcode. XRI C7H ‚Äì Stands for no operation.‚Äì During execution of NOP, all T states do nothings, no register changes occur. NOP It ends data processing HLT Tells computer to take data from designated port to the accumulator. IN byte(port number) IN 01H IN 02H Accumulator word is loaded into the designated output port. OUT byte(port number) OUT 03H &amp; OUT 04H Rotate the accumulator left. Will shift all bits to the left and move MSB into LSB. RAL Rotate the accumulator right. RAR Take input from port 2 and determine whether the LSB is 0 or 1.‚Äì If 0, then load ASCII value of Y to the accumulator‚Äì else load ASCII value of N to accumulator IN 02HANI 01HJZ YESMVI A, 4EH (4EH is ASCII of N)JMP DONEYES: MVI A, 59H (59H is ASCII of Y)DONE: OUT 03HHLT Modify the previous program if we want serial output at port 4 instead of parallel output at port 3. IN 02HANI 01HJZ YESMVI A, 4EH (4EH is ASCII of N)JMP DONEYES: MVI A, 59H (59H is ASCII of Y)DONE: MVI C, 08HAGAIN: OUT 04HRARDEC CJNZ AGAINHLT CALL &amp; RETCALL is the mnemonic for call the subroutine. A subroutine is a program stored in memory for possible use by various programs. Like finding sines, cosines, tangents, square roots etc. Every call instruction must include the starting address of the desired subroutine.CALL 5000HRET stands for return. It is used at the end of the subroutine. When CALL is executed automatically PC contents are stored in FFFEH andFFFFH (last two memory locations). CALL is unconditional.HANDSHAKINGHandshaking is an interaction between a CPU and a peripheral device during an I/O data transfer. If input is told to be taken from port 01 then handshaking is must. Input from port 01 will not be taken until The LSB of port 2, also called the ready bit goes high. The time which is wasted to check the LSB of port 02 until it becomes high is called CPU waiting. LSB=1 of port 02 means input is available at port 01. After taking input from port 01, the 7th pin or acknowlegde bit (MSB) of port 4 goes high, automatically resettng the ready bit at port 02. ACK=1 of port 04 means ‚Äúinput is received‚Äù, the message which is acknowlegded by keyboard encoder allowing it to reset the ready bit. And then the ACK bit gets reset. If again any input is available at port 01, the ready bit at port 02 goes high. Thus the process of handshaking continues.The sequence of SAP-2 handshaking:i. READY bit goes high.ii. Input the data from port 1.iii. ACK bit goes high to reset the READY bit.iv. Reset the ACK bit.Take a input from port 1 using handshaking.AGAIN: IN 02H ANI 01H JZ AGAIN // input from port 02 is continuously taken until ready bit goes high. IN 01H // after ready bit went high, input from port 01 is taken MOV B,A // the value of accumulator would change so better store it to another register MVI A, 80H // the ack bit goes high in order to give keyboard encoder the message that the input is received. OUT 04H MVI A, 00H // the ack bit is reset. OUT 04H HLTT States Variable machine cycle. any register instruction takes 4 T states. any MRI takes 7 T states. JM/JZ/JNZ has T states of 10/7. 10 T states when jump occurs. 7 T states when jump does not occur. Instructions States Bytes ADD, MOV, SUB, INR, DCR, ANA, ORA, XRA, CMA 4 1 ANI, MVI, ORI, XRI 7 2 LDA, STA 13 3 CALL 18 3 JMP 10 3 JZ, JNZ, JM 10 (if jump happens) / 7 (if jump doesn‚Äôt happen) 3 RET 10 1 NOP 4 1 HLT 5 1 RAR, RAL 4 1 IN, OUT 10 2 FLAGS If all the output bits of the accumulator are sent to NOR gate, then the result of NOR gate is sent to zero flag. If all the pins were 0, output of NOR=1, otherwise in all cases output of NOR=0. so when NOR=1 and lf=1 only then the zero flag will be affected. The MSB of the accumulator is sent to AND gate with the other input Lf, if both are 1, the output of AND=1, meaning sign bit is high. So the Sign flag becomes 1. We get to know whether the flags are being affected or not from Lf pin. if Lf=0 zero flag and sign flag will not be affected, if Lf=1 both will be affected.Addressing modesDirect addressing - LDA/STA/IN/OUTImmediate addressing - MVI/ANI/ORI/XRI/CALL/JMP/JZ/JNZ/JMRegister addressing - ADD/SUB/INR/DCR/MOV/ANA/ORA/XRAImplied addressing - CMA/RAR/RAL/RETSAP-2 has a clock frequency of 1 MHz. This means each T state is 1 microsecond long. How long does it take to execute the following SAP-2 subroutine?bytes Program T-states _____ _______________________ ________________________________________________________________________________________________________________________ 2 MVI C, 46H (decimal 70) // jekono immediate instruction er jonno 7 ta T state lage. so 1 (execute time) * 7 * 1 microsec. 1 AGAIN: DCR C // jekono register instruction er jonno 4 ta T state lage. so 70 * 4 * 1 microsec. 3 JNZ AGAIN // 70 tomo bar e giye C=0 jokhon hobe tokhon JNZ kaj korbe na so JNZ execute hobe 69 times so, 69 * 10 * 1 microsecs. ar execute hobe na 1 times so, 1 * 7 * 1 microsecs. 1 NOP // 1 * 4 * 1 microsecs 1 RET // 1* 10 * 1 microsecs._____ _______________________ _____________________________________________________ 8 total = 998 microsecs bytes Program T-states _____ _______________________ ________________________________________________________________________________________________________________________ 2 MVI B, 0AH 1*7*1 = 7 2 LOOP 1: MVI C, 47H (decimal 71) 10*7*1 = 70 1 LOOP 2: DCR C 10*(71*4*1) = 2840 3 JNZ LOOP2 10*(70*10*1 + 1*7*1) = 7070 1 DCR B 10*4*1 = 40 3 JNZ LOOP1 9*10*1 + 1*7*1 = 97 1 RET 1*10*1 = 10_____ _______________________ ________________________________________________________________________________________________________________________ 13 total = 10134 microsecsbytes Program T-states _____ _______________________ ________________________________________________________________________________________________________________________ 2 MVI B, 0AH 1*7*1 = 7 2 LOOP 1: MVI C, 47H (decimal 71) 10*7*1 = 70 1 LOOP 2: DCR C 10*(71*4*1) = 2840 2 MVI A,5 10*(71*7*1) = 4970 1 LOOP 3: DCR A (10*71)*(5*4*1) = 14200 3 JNZ LOOP3 (10*71)*(4*10*1 + 1*7*1) = 33370 3 JNZ LOOP2 10*(70*10*1 + 1*7*1) = 7070 1 DCR B 10*4*1 = 40 3 JNZ LOOP1 9*10*1 + 1*7*1 = 97 1 RET 1*10*1 = 10_____ _______________________ ________________________________________________________________________________________________________________________ 19 total = 62674 microsecs" }, { "title": "PyHaxx", "url": "/posts/Pyhaxx/", "categories": "Language, python", "tags": "basics, python", "date": "2022-02-27 09:00:50 +0600", "snippet": "Motivation ^_^I know learning a new thing needs the answer to ‚ÄúWHY SHOULD I EVEN LEARN THIS STUFF? HOW CAN I APPLY THIS LEARNING IN PRACTICAL LIFE?‚Äù. So here we go for the answer now..Python is nec...", "content": "Motivation ^_^I know learning a new thing needs the answer to ‚ÄúWHY SHOULD I EVEN LEARN THIS STUFF? HOW CAN I APPLY THIS LEARNING IN PRACTICAL LIFE?‚Äù. So here we go for the answer now..Python is necessary not only for software devs but also for an accountant, an economic expert, a marketer, a finance expert, a genetic engineer and also for higher study enthusiasts.A common question of newbie programmers these days is why should I learn python first instead of C/C++?The simple answer starts with a simple question ‚ÄúWhy Shouldn‚Äôt You?‚Äù Python is easy to learn compared to C, C++ or java. It is one of the top programming languages of 2021. Python has a wide range of libraries which are used in big projects. These library functions are customizable. Python is an open source language meaning you can develop library functions of python yourself. Python supports cross platform development. What is cross platform development? If you develop an android application it would work in IOS as well. Even if you develop a desktop application it can be executed in any operating systems WINDOWS or LINUX Python has two very famous frameworks for backend development. Flask and Django (read it jango). So for job preparation one can prepare him/herself learning any of the two frameworks very well. In higher studies , in different sectors python is needed badly. Such as Artificial Intelligence, Machine learning, Data Science. The job sector for python is huge. You can be a web dev, software dev, data scientist, business analyst, ML engineer, game dev, network programmer and what not.So if you excel in only one programming language python, then your career will have the boost it needs for sure &lt;3.Day 3 BasicsObject Oriented Programming Object: An object is simply a collection of data (variables) and methods (functions) that act on those data.A parrot is an object, as it has the following properties: name, age, color as attributes and singing, dancing as behavior.An object is also called an instance of a class and the process of creating this object is called instantiation.The concept of OOP in Python focuses on creating reusable code. This concept is also known as DRY (Don't Repeat Yourself).Class:A class is a blueprint for the object.We can think of class as a sketch of a parrot with labels.It contains all the details about the name, colors, size etc. Based on these descriptions, we can study about the parrot.Here, a parrot is an object. From class, we construct instances.An instance is a specific object created from a particular class.When class is defined, only the description for the object is defined. Therefore, no memory or storage is allocated.Methods:Methods are functions defined inside the body of a class. They are used to define the behaviors of an object.Inheritance:Inheritance is a way of creating a new class for using details of an existing class without modifying it.The newly formed class is a derived class (or child class). Similarly, the existing class is a base class (or parent class). class BaseClass: Body of base class class DerivedClass(BaseClass): Body of derived class Method Overriding Generally when overriding a base method by a derived method, we tend to extend the definition of base method rather than replacing it. Multiple Inheritance A class can be derived from more than one base class in Python, similar to C++. This is called multiple inheritance. In multiple inheritance, the features of all the base classes are inherited into the derived class. class Base1: pass class Base2: pass class MultiDerived(Base1, Base2): pass Multilevel Inheritance We can also inherit from a derived class. This is called multilevel inheritance. It can be of any depth in Python.In multilevel inheritance, features of the base class and the derived class are inherited into the new derived class. class Base: pass class Derived1(Base): pass class Derived2(Derived1): pass EncapsulationUsing OOP in Python, we can restrict access to methods and variables.This prevents data from direct modification which is called encapsulation.In Python, we denote private attributes using underscore as the prefix i.e single _ or double __. Polymorphism Polymorphism allows the same interface for different objects. Suppose, we need to color a shape, there are multiple shape options (rectangle, square, circle). However we could use the same method to color any shape. This concept is called Polymorphism. Dictionary ![image](https://user-images.githubusercontent.com/59027621/149619747-5c553541-b106-472a-972e-90546876ce2c.png) Lists - [list_basics](https://github.com/Geek-a-Byte/PyHaxx/blob/main/list.py)- [list_comprehension](https://github.com/Geek-a-Byte/PyHaxx/blob/main/List_comprehension.py) ![image](https://user-images.githubusercontent.com/59027621/149617730-b73473c3-983e-4eee-a1f6-16683f2189c2.png) Working with external libraries [tutorial link](https://app.gitbook.com/s/98WyytUmB4pfdMH3QiQy/) Exceptions We can make certain mistakes while writing a program that lead to errors when we try to run it. A python program terminates as soon as it encounters an unhandled error. These errors can be broadly classified into two classes: - Syntax errors - Logical errors (Exceptions) Python Syntax Errors Error caused by not following the proper structure (syntax) of the language is called syntax error or parsing error. Python Logical Errors (Exceptions) Errors that occur at runtime (after passing the syntax test) are called exceptions or logical errors. For instance, - they occur when we try to open a file(for reading) that does not exist (FileNotFoundError) - try to divide a number by zero (ZeroDivisionError) - try to import a module that does not exist (ImportError) Whenever these types of runtime errors occur, Python creates an exception object. If not handled properly, it prints a traceback to that error along with some details about why that error occurred. When these exceptions occur, the Python interpreter stops the current process and passes it to the calling process until it is handled. If not handled, the program will crash. Python Built-in Exceptions Illegal operations can raise exceptions. There are plenty of built-in exceptions in Python that are raised when corresponding errors occur. We can view all the built-in exceptions using the built-in local() function as follows: print[dir(locals(]('__builtins__'))) Catching Exceptions in Python In Python, exceptions can be handled using a try statement. The critical operation which can raise an exception is placed inside the try clause. The code that handles the exceptions is written in the except clause. User Defined Exceptions [Learn how to define an exception](https://www.programiz.com/python-programming/user-defined-exception) Map map() Parameter The map() function takes two parameters:function - a function that perform some action to each element of an iterableiterable - an iterable like sets, lists, tuples, etcYou can pass more than one iterable to the map() function. Map Return Value The map() function returns an object of map class. The returned value can be passed to functions like list() - to convert to list set() - to convert to a set, and so on. Filter The filter() function extracts elements from an iterable (list, tuple etc.) for which a function returns True. filter() Syntax filter(function, iterable) filter() Parameter function - a function that perform some action to each element of an iterableiterable - an iterable like sets, lists, tuples, etc Return Value The filter() function returns an iterator. You can easily convert iterators to sequences like lists, tuples, strings etc. Lambda Functions an anonymous function is a function that is defined without a name. While normal functions are defined using the def keyword in Python, anonymous functions are defined using the lambda keyword. Hence, anonymous functions are also called lambda functions. Syntax of Lambda Function in python lambda arguments: expression Resources Programiz (the easiest explanation so far according to me) Tamim Subeen‚Äôs pybook Geeksforgeeks Real Python Python 3.10.0 tutorial documentation Kaggle Playlist of mahmudul haque bhaiya for MIC python course(last year) freecodecamp Sumon‚Äôs Acamedy UdemyPractise Problems Github repo - Python-programming-exercises Hackerrank W3school ultimate pythonUnique Project Ideas with python Crio Python mini projects with source code project-based-learning tiny python projects Amazing Python Scripts" }, { "title": "Cloning a Laravel + Oracle 11g Project Requirements", "url": "/posts/Laravel-with-Oracle/", "categories": "Backend Development, Laravel8", "tags": "backend development, laravel8, oracle11g", "date": "2022-02-27 07:17:50 +0600", "snippet": " php version : 8.0.3 , OS: Windows, System Specification : 64-bit operating system, x64-based processorStep 0 Install xampp, laravel from this link and tutorialStep 1 Set xampp serverIf Error: Apa...", "content": " php version : 8.0.3 , OS: Windows, System Specification : 64-bit operating system, x64-based processorStep 0 Install xampp, laravel from this link and tutorialStep 1 Set xampp serverIf Error: Apache shutdown unexpectedlySolution : Go to apache config -&gt; httpd.config and Set Listen 80 to Listen 8085Step 2 Start the apache server and Check whether xampp is working or not: http://localhost:8085/dashboard/Step 3 Install composer from this link Or this linkHelper tutorialStep 4 Download php_oci8.dll and php_oci8_11g.dll from hereStep 5 Install Instantclient-basic-nt-12.1.0.2.0.zip from hereStep 6 Copy and paste the php_oci8.dll and php_oci8_11g.dll in C:\\xampp\\apache\\bin and C:\\xampp\\php\\extStep 7 Add the two lines in C:\\xampp\\php\\php.iniextension=php_oci8.dll extension=php_oci8_11g.dllStep 8 Make sure the extension directive is set toextension_dir =‚ÄùC:\\xampp\\php\\ext‚Äù In php.iniStep 9 remove ; (uncomment) before extension=fileinfo in php.ini file , if there is already no ; then skip this step.Step 10 Add path in system variables in this orderC:\\xampp\\phpC:\\ProgramData\\ComposerSetup\\binC:\\xampp\\php\\instantclient_12_1Step 11 Clone GitHub repo for this project locally.Step 12 cd into your projectStep 13Install Composer Dependencies(in cmd write):composer installStep 14 nstall NPM Dependencies :npm installStep 15 copy the text in .env.example file in the project directory and paste in A newly created .env file(create an empty .env file manually)Step 16 write in the cmd to generate a keyphp artisan key:generateStep 17 In the .env file edit the database connection informationDB_CONNECTION=oracleDB_HOST=localhostDB_PORT=1521DB_DATABASE=xeDB_USERNAME=********(your username)DB_PASSWORD=*********(your password)Step 18 migrate all the tables created in laravel:php artisan migrateStep 19 If fresh migration needed (dropping all tables, and migrating them freshly):php artisan migrate:freshStep 20 to render the project in the browser:php artisan serve or php artisan serve --port=8081" }, { "title": "Modern OS part 3 : Not Recently Used Page Replacement Algorithm", "url": "/posts/modernOS-part3/", "categories": "Academics, Modern Operating System", "tags": "academic courses, os", "date": "2022-02-27 02:52:50 +0600", "snippet": "In most computers with virtual memory, each page is associated with two status bits.Referenced (R) bit is set whenever a page is read or written.Modified (M) bit is set whenever the page is written...", "content": "In most computers with virtual memory, each page is associated with two status bits.Referenced (R) bit is set whenever a page is read or written.Modified (M) bit is set whenever the page is written.In this algorithm, the operating system uses (R) and (M) bits to distinguish between pages. When a process starts, both page bits (R) and (M) are set to 0 by OS. If a page has been referenced, a page fault will occur and the (R) bit is set by the OS. If a page is modified, then another page fault will occur and the OS will set the (M) bit.Periodically the R bit is cleared by a clock interrupt. Only pages referenced within the current clock interval are marked with a referenced bit. When a page fault occurs and there are no empty frames, the operating system inspects all the pages and divides them into 4 categories: Class 0: NR, NM Class 1: NR,M Class 2: R,NM Class 3: R,MLooking at it like this, it feels class 1 is not possible. How can a page be modified but not referenced? Well, this happens when a clock interrupt resets the R bit to 0. The M bit doesn‚Äôt reset by the clock interrupt.Based on the R and M bits, all the pages are categorized into the above 4 categories. The algorithm removes a random page with the lowest numbered non-empty class. If class 0 is empty, then a random page from class 1 is replaced and so on." }, { "title": "Modern OS part 2 : Optimal Page Replacement Algorithm", "url": "/posts/modernOS-part2/", "categories": "Academics, Modern Operating System", "tags": "academic courses, os", "date": "2022-02-27 02:52:50 +0600", "snippet": "This algorithm replaces the page that will not be referred by the CPU in future for the longest time.It is practically impossible to implement this algorithm.This is because the pages that will not...", "content": "This algorithm replaces the page that will not be referred by the CPU in future for the longest time.It is practically impossible to implement this algorithm.This is because the pages that will not be used in future for the longest time can not be predicted.However, it is the best known algorithm and gives the least number of page faults.Hence, it is used as a performance measure criterion for other algorithms.Let‚Äôs understand this through an example. Let‚Äôs consider a page reference string (7, 0, 1, 2, 0, 3, 0, 4, 2, 3, 0, 3, 2) with 4 page frames.Initially all the memory slots will be empty so (7, 0, 1, 2) will be allocated to the memory with 4 page-faults(Miss). As (0) is already there, there‚Äôs no page fault(Hit). Next in the string is (3), it‚Äôll replace (7) as it‚Äôs not used for the longest period of time in the future, with one page fault. Again, 0 is already there, so no page fault. 4 will replace 1 with one page fault. And for the rest of the string, there will be no page fault as all the arriving pages are already there in the memory.Total Page Fault = total miss = 6Now, as we understand this algorithm, we tend to realize that this algorithm can‚Äôt be implemented practically as an operating system cannot know the future page requests in advance. So, this algorithm is just an instance of what can be the optimal solution." }, { "title": "Modern OS part 1 : Page Fault and Page Replacement", "url": "/posts/modernOS-part1/", "categories": "Academics, Modern Operating System", "tags": "academic courses, os", "date": "2022-02-27 02:52:50 +0600", "snippet": "Page faultA page fault occurswhen a page referenced by the CPU is not found in the main memory.The required page has to be brought from the secondary memory into the main memory.A page that is mapp...", "content": "Page faultA page fault occurswhen a page referenced by the CPU is not found in the main memory.The required page has to be brought from the secondary memory into the main memory.A page that is mapped in the RAM/physical memory/main memory has to be replaced if all the frames of main memory are already occupied.Page ReplacementPage replacement is a process of swapping out an existing page from the frame of a main memory and replacing it with the required page. Page replacement algorithms help to decide which page must be swapped out from the main memory to create a room for the incoming page. page fault occurred i.e the referenced page by the CPU is not found in ram. Find a free page frame If there is a free page frame, use it (go to step no 7) Otherwise, Select a page to be replaced using page replacement algorithm Write the selected page to the disk if modified bit of that page is 1 wanted free page frame found Fetch disk block into page frame When disk read finishes, add VM mapping for the page change page table entries" } ]
